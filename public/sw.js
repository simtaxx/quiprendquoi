(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
if(addEventListener("install",a=>{a.waitUntil(caches.open("offline").then(a=>{a.add("offline.html")}))}),addEventListener("fetch",a=>{a.request.headers.get("Accept").includes("text/html")?a.respondWith(fetch(a.request).then(b=>{if(isPartyPage(a.request.url)){const c=b.clone();return caches.open("parties").then(b=>b.put(a.request,c)),b}return b}).catch(()=>isPartyPage(a.request.url)?caches.match(a.request).catch(()=>caches.match("offline.html")):caches.match("offline.html"))):a.respondWith(fetch(a.request).then(b=>{const c=b.clone();return caches.open("static").then(b=>b.put(a.request,c)),b}).catch(()=>caches.match(a.request)))}),"PushManager"in window){}function isPartyPage(a){return /party\/[a-zA-Z0-9]*$/.test(a)}

},{}]},{},[1]);
